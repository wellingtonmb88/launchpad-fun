/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { LAUNCHPAD_FUN_PROGRAM_ADDRESS } from '../programs';

/** InvalidAuthority: Invalid authority */
export const LAUNCHPAD_FUN_ERROR__INVALID_AUTHORITY = 0x1770; // 6000
/** ProtocolConfigInitialized: ProtocolConfig already initialized */
export const LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_INITIALIZED = 0x1771; // 6001
/** ProtocolConfigNotInitialized: ProtocolConfig not initialized */
export const LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_NOT_INITIALIZED = 0x1772; // 6002
/** ProtocolConfigNotActive: ProtocolConfig not active */
export const LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_NOT_ACTIVE = 0x1773; // 6003
/** ProtocolAlreadyPaused: Protocol is already paused */
export const LAUNCHPAD_FUN_ERROR__PROTOCOL_ALREADY_PAUSED = 0x1774; // 6004
/** ProtocolNotPaused: Protocol is not paused */
export const LAUNCHPAD_FUN_ERROR__PROTOCOL_NOT_PAUSED = 0x1775; // 6005
/** CreatorSellDelayNotMet: Creator sell delay not met */
export const LAUNCHPAD_FUN_ERROR__CREATOR_SELL_DELAY_NOT_MET = 0x1776; // 6006
/** AssetRateMustBeGreaterThanZero: Asset rate must be greater than zero */
export const LAUNCHPAD_FUN_ERROR__ASSET_RATE_MUST_BE_GREATER_THAN_ZERO = 0x1777; // 6007
/** GraduateThresholdNotMet: Graduate threshold not met */
export const LAUNCHPAD_FUN_ERROR__GRADUATE_THRESHOLD_NOT_MET = 0x1778; // 6008
/** ProtocolFeeExceedsMaximum: Protocol fee exceeds maximum */
export const LAUNCHPAD_FUN_ERROR__PROTOCOL_FEE_EXCEEDS_MAXIMUM = 0x1779; // 6009
/** ProtocolFeeMinimumNotMet: Protocol fee minimum not met */
export const LAUNCHPAD_FUN_ERROR__PROTOCOL_FEE_MINIMUM_NOT_MET = 0x177a; // 6010
/** InvalidCreator: Invalid creator */
export const LAUNCHPAD_FUN_ERROR__INVALID_CREATOR = 0x177b; // 6011
/** InvalidMint: Invalid mint */
export const LAUNCHPAD_FUN_ERROR__INVALID_MINT = 0x177c; // 6012
/** LaunchPadTokenNotCreated: LaunchPadToken not created */
export const LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_NOT_CREATED = 0x177d; // 6013
/** LaunchPadTokenAlreadyCreated: LaunchPadToken already created */
export const LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_ALREADY_CREATED = 0x177e; // 6014
/** LaunchPadTokenNotAlreadyToGraduate: LaunchPadToken not already to graduate */
export const LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_NOT_ALREADY_TO_GRADUATE = 0x177f; // 6015
/** LaunchPadTokenTradingNotEnabled: LaunchPadToken trading is not enabled */
export const LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_TRADING_NOT_ENABLED = 0x1780; // 6016
/** InvalidTokenNameLength: Invalid token name length */
export const LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_NAME_LENGTH = 0x1781; // 6017
/** InvalidTokenSymbolLength: Invalid token symbol length */
export const LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_SYMBOL_LENGTH = 0x1782; // 6018
/** InvalidTokenUriLength: Invalid token URI length */
export const LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_URI_LENGTH = 0x1783; // 6019
/** MathOverflow: Math overflow */
export const LAUNCHPAD_FUN_ERROR__MATH_OVERFLOW = 0x1784; // 6020
/** InsufficientTokenLiquidity: Insufficient token liquidity */
export const LAUNCHPAD_FUN_ERROR__INSUFFICIENT_TOKEN_LIQUIDITY = 0x1785; // 6021
/** InsufficientAssetLiquidity: Insufficient asset liquidity */
export const LAUNCHPAD_FUN_ERROR__INSUFFICIENT_ASSET_LIQUIDITY = 0x1786; // 6022

export type LaunchpadFunError =
  | typeof LAUNCHPAD_FUN_ERROR__ASSET_RATE_MUST_BE_GREATER_THAN_ZERO
  | typeof LAUNCHPAD_FUN_ERROR__CREATOR_SELL_DELAY_NOT_MET
  | typeof LAUNCHPAD_FUN_ERROR__GRADUATE_THRESHOLD_NOT_MET
  | typeof LAUNCHPAD_FUN_ERROR__INSUFFICIENT_ASSET_LIQUIDITY
  | typeof LAUNCHPAD_FUN_ERROR__INSUFFICIENT_TOKEN_LIQUIDITY
  | typeof LAUNCHPAD_FUN_ERROR__INVALID_AUTHORITY
  | typeof LAUNCHPAD_FUN_ERROR__INVALID_CREATOR
  | typeof LAUNCHPAD_FUN_ERROR__INVALID_MINT
  | typeof LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_NAME_LENGTH
  | typeof LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_SYMBOL_LENGTH
  | typeof LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_URI_LENGTH
  | typeof LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_ALREADY_CREATED
  | typeof LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_NOT_ALREADY_TO_GRADUATE
  | typeof LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_NOT_CREATED
  | typeof LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_TRADING_NOT_ENABLED
  | typeof LAUNCHPAD_FUN_ERROR__MATH_OVERFLOW
  | typeof LAUNCHPAD_FUN_ERROR__PROTOCOL_ALREADY_PAUSED
  | typeof LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_INITIALIZED
  | typeof LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_NOT_ACTIVE
  | typeof LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_NOT_INITIALIZED
  | typeof LAUNCHPAD_FUN_ERROR__PROTOCOL_FEE_EXCEEDS_MAXIMUM
  | typeof LAUNCHPAD_FUN_ERROR__PROTOCOL_FEE_MINIMUM_NOT_MET
  | typeof LAUNCHPAD_FUN_ERROR__PROTOCOL_NOT_PAUSED;

let launchpadFunErrorMessages: Record<LaunchpadFunError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  launchpadFunErrorMessages = {
    [LAUNCHPAD_FUN_ERROR__ASSET_RATE_MUST_BE_GREATER_THAN_ZERO]: `Asset rate must be greater than zero`,
    [LAUNCHPAD_FUN_ERROR__CREATOR_SELL_DELAY_NOT_MET]: `Creator sell delay not met`,
    [LAUNCHPAD_FUN_ERROR__GRADUATE_THRESHOLD_NOT_MET]: `Graduate threshold not met`,
    [LAUNCHPAD_FUN_ERROR__INSUFFICIENT_ASSET_LIQUIDITY]: `Insufficient asset liquidity`,
    [LAUNCHPAD_FUN_ERROR__INSUFFICIENT_TOKEN_LIQUIDITY]: `Insufficient token liquidity`,
    [LAUNCHPAD_FUN_ERROR__INVALID_AUTHORITY]: `Invalid authority`,
    [LAUNCHPAD_FUN_ERROR__INVALID_CREATOR]: `Invalid creator`,
    [LAUNCHPAD_FUN_ERROR__INVALID_MINT]: `Invalid mint`,
    [LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_NAME_LENGTH]: `Invalid token name length`,
    [LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_SYMBOL_LENGTH]: `Invalid token symbol length`,
    [LAUNCHPAD_FUN_ERROR__INVALID_TOKEN_URI_LENGTH]: `Invalid token URI length`,
    [LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_ALREADY_CREATED]: `LaunchPadToken already created`,
    [LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_NOT_ALREADY_TO_GRADUATE]: `LaunchPadToken not already to graduate`,
    [LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_NOT_CREATED]: `LaunchPadToken not created`,
    [LAUNCHPAD_FUN_ERROR__LAUNCH_PAD_TOKEN_TRADING_NOT_ENABLED]: `LaunchPadToken trading is not enabled`,
    [LAUNCHPAD_FUN_ERROR__MATH_OVERFLOW]: `Math overflow`,
    [LAUNCHPAD_FUN_ERROR__PROTOCOL_ALREADY_PAUSED]: `Protocol is already paused`,
    [LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_INITIALIZED]: `ProtocolConfig already initialized`,
    [LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_NOT_ACTIVE]: `ProtocolConfig not active`,
    [LAUNCHPAD_FUN_ERROR__PROTOCOL_CONFIG_NOT_INITIALIZED]: `ProtocolConfig not initialized`,
    [LAUNCHPAD_FUN_ERROR__PROTOCOL_FEE_EXCEEDS_MAXIMUM]: `Protocol fee exceeds maximum`,
    [LAUNCHPAD_FUN_ERROR__PROTOCOL_FEE_MINIMUM_NOT_MET]: `Protocol fee minimum not met`,
    [LAUNCHPAD_FUN_ERROR__PROTOCOL_NOT_PAUSED]: `Protocol is not paused`,
  };
}

export function getLaunchpadFunErrorMessage(code: LaunchpadFunError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (launchpadFunErrorMessages as Record<LaunchpadFunError, string>)[
      code
    ];
  }

  return 'Error message not available in production bundles.';
}

export function isLaunchpadFunError<
  TProgramErrorCode extends LaunchpadFunError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    LAUNCHPAD_FUN_PROGRAM_ADDRESS,
    code
  );
}

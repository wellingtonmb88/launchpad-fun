/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';
import {
  getLaunchPadTokenStatusDecoder,
  getLaunchPadTokenStatusEncoder,
  type LaunchPadTokenStatus,
  type LaunchPadTokenStatusArgs,
} from '.';

export type LaunchPadTokenGraduated = {
  mint: Address;
  status: LaunchPadTokenStatus;
  timestamp: bigint;
};

export type LaunchPadTokenGraduatedArgs = {
  mint: Address;
  status: LaunchPadTokenStatusArgs;
  timestamp: number | bigint;
};

export function getLaunchPadTokenGraduatedEncoder(): FixedSizeEncoder<LaunchPadTokenGraduatedArgs> {
  return getStructEncoder([
    ['mint', getAddressEncoder()],
    ['status', getLaunchPadTokenStatusEncoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getLaunchPadTokenGraduatedDecoder(): FixedSizeDecoder<LaunchPadTokenGraduated> {
  return getStructDecoder([
    ['mint', getAddressDecoder()],
    ['status', getLaunchPadTokenStatusDecoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getLaunchPadTokenGraduatedCodec(): FixedSizeCodec<
  LaunchPadTokenGraduatedArgs,
  LaunchPadTokenGraduated
> {
  return combineCodec(
    getLaunchPadTokenGraduatedEncoder(),
    getLaunchPadTokenGraduatedDecoder()
  );
}
